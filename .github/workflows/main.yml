name: .NET

on:
  pull_request:
    branches: [main]

  # allow running this workflow manually
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build projekt
        run: dotnet build monogame-projekt.csproj --configuration Release

      - name: Prepare filtered net8.0 output
        run: |
          $source = "bin/Release/net8.0"
          $destination = "filtered/net8.0"

          # Create destination folder
          New-Item -ItemType Directory -Path $destination -Force | Out-Null

          # Copy everything except runtimes
          Get-ChildItem -Path $source -Recurse -Force |
            Where-Object { $_.FullName -notmatch "\\runtimes\\.*" } |
            ForEach-Object {
              $relativePath = $_.FullName.Substring($source.Length).TrimStart("\")
              $targetPath = Join-Path $destination $relativePath
              if ($_.PSIsContainer) {
                New-Item -ItemType Directory -Path $targetPath -Force | Out-Null
              } else {
                $dir = Split-Path $targetPath
                if (-not (Test-Path $dir)) { New-Item -ItemType Directory -Path $dir -Force | Out-Null }
                Copy-Item $_.FullName -Destination $targetPath -Force
              }
            }

          # Copy only runtimes/win-x64
          $runtimeSrc = Join-Path $source "runtimes\win-x64"
          $runtimeDest = Join-Path $destination "runtimes\win-x64"
          if (Test-Path $runtimeSrc) {
            Copy-Item -Path $runtimeSrc -Destination $runtimeDest -Recurse -Force
          }
        shell: pwsh

      - name: Upload filtered artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: DHBW Game
          path: filtered

